#!/usr/bin/perl
use strict;
use warnings;
use feature    qw(say);
use autodie;
use Encode     qw(decode);
use List::Util qw(max);
use POSIX      qw(strftime);
use Term::ReadLine;
use InvertedIndex;
use Query;


my $docs  = shift // 'training.txt';
my $stash = "$docs.stash";
open my $fh, '<', $docs;

say 'Building index...';
my $start = time;
my $index = InvertedIndex->new;

say "Trying to unstash $stash...";
unless ($index->unstash($stash))
{
    say "Indexing $docs...";
    for (;;)
    {
        my $id       = tell $fh;
        my $document = <$fh> // last;
        $index->index($id, decode 'UTF-8' => $document);
    }

    say 'Stashing...';
    $index->stash($stash);
}

say strftime 'Index built after %M:%S' => gmtime(time - $start);


my $term = Term::ReadLine->new('InvertedIndex');
while (defined($_ = $term->readline('query: ')))
{
    if (my $query = Query::parse(decode 'UTF-8' => $_))
    {
        my $row = $query->run($index)->listref;
        for (@$row)
        {
            seek $fh, $_, 0;
            print $_, "\t", scalar <$fh>;
        }
        say scalar @$row, " results";
    }
    else
    {
        warn "Invalid query.\n";
    }
}

print "\nCleaning up, this may take a bit...\n";
